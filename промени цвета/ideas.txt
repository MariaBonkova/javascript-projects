const colors = ['#ccd5ae', '#e8e8e4', '#a3c4f3', '#d6ccc2', '#cdb4db'];

Интерактивно поздравително съобщение
Цел: Показване на персонализирано поздравление въз основа на въведено от потребителя име.
Стъпки:
HTML: Създайте поле за въвеждане на име и бутон за изпращане.
CSS: Стил на полето за въвеждане, бутона и областта за поздравление.
JavaScript: Добавете събитие към бутона, което да взема въведеното име и да показва поздравително съобщение.
Тестване: Уверете се, че поздравлението се обновява правилно при различни въведени имена.

==============================================

Прост брояч
Цел: Реализиране на брояч, който се увеличава или намалява при действия на потребителя.
Стъпки:
HTML: Създайте област за показване на стойността на брояча и два бутона: "Увеличи" и "Намали".
CSS: Стил на областта за показване и бутоните за по-добро потребителско изживяване.
JavaScript: Добавете събития към бутоните, които да увеличават или намаляват стойността на брояча и да обновяват показването.
Тестване: Проверете дали броячът се обновява правилно при натискане на бутоните.

==============================================

Карусел с изображения
Цел: Създаване на прост слайдер, който преминава през различни изображения.
Стъпки:
HTML: Създайте контейнер с няколко изображения и бутони за навигация ("Следващо" и "Предишно").
CSS: Стил на контейнера и изображенията, като се уверите, че само едно изображение е видимо в даден момент.
JavaScript: Реализирайте логика за показване на следващото или предишното изображение при натискане на съответния бутон.
Тестване: Уверете се, че изображенията се сменят правилно в двете посоки.

==============================================

Избор на цвят
Цел: Позволяване на потребителите да изберат цвят и да променят фоновия цвят на даден елемент.
Стъпки:
HTML: Включете поле за избор на цвят и елемент (напр. div), чийто фон ще се променя.
CSS: Стил на полето за избор на цвят и елемента за яснота.
JavaScript: Добавете събитие към полето за избор на цвят, което да обновява фоновия цвят на елемента въз основа на избрания цвят.
Тестване: Уверете се, че фоновият цвят на елемента се променя правилно при различни избори на цвят.

==============================================

Списък със задачи
Цел: Създаване на основен списък със задачи, където потребителите могат да добавят и премахват елементи.
Стъпки:
HTML: Създайте поле за въвеждане на нови задачи, бутон "Добави" и списък за показване на задачите.
CSS: Стил на полето за въвеждане, бутона и елементите от списъка.
JavaScript: Реализирайте функционалност за добавяне на нови задачи към списъка и премахване на задачи при кликване.
Тестване: Уверете се, че задачите могат да се добавят и премахват според очакванията.

==============================================

Генератор на случайни цитати
Цел: Показване на случаен цитат от предварително дефиниран списък при натискане на бутон.
Стъпки:
HTML: Създайте област за показване на цитата и бутон за генериране на нов цитат.
CSS: Стил на областта за показване и бутона за четимост.
JavaScript: Съхранете масив от цитати и реализирайте логика за показване на случаен цитат при натискане на бутона.
Тестване: Уверете се, че при всяко натискане на бутона се показва нов случаен цитат.

==============================================

Конвертор на температура
Цел: Конвертиране на температури между Целзий и Фаренхайт.
Стъпки:
HTML: Създайте полета за въвеждане на температура и бутон за извършване на конверсията.
CSS: Стил на полетата за въвеждане и бутона за яснота.
JavaScript: Добавете събития за извършване на конверсията и показване на резултата при натискане на бутона.
Тестване: Проверете дали изчисленията за конверсия са точни при различни входни стойности.

==============================================

Прост тест - викторина
Цел: Представяне на въпрос с няколко възможни отговора и индикация дали избраният отговор е правилен.
Стъпки:
HTML: Показване на въпрос с няколко възможни отговора и бутон за изпращане.
CSS: Стил на въпроса, отговорите и бутона за по-добро потребителско изживяване.
JavaScript: Реализирайте логика за проверка на избрания отговор и показване на обратна връзка.
Тестване: Уверете се, че обратната връзка е правилна за всеки възможен избор.

==============================================

Брояч на символи
Цел: Създаване на приложение, което отчита и показва броя на въведените символи в текстово поле.
Стъпки:
HTML: Добавете текстово поле (textarea) за въвеждане на текст и елемент (напр. div), който да показва броя на символите.
CSS: Стил на текстовото поле и елемента за показване на броя на символите за по-добра визуализация.
JavaScript: Добавете събитие input към текстовото поле, което да изчислява дължината на въведения текст и да обновява елемента за показване на броя на символите.
Тестване: Уверете се, че броячът се обновява правилно при всяко въвеждане или изтриване на текст.
Таймер за обратно броене
